<ac:structured-macro ac:name="tip">
<ac:rich-text-body>
<p>See <ac:link ac:anchor="UsingPlantUMLStdlibC4LightweightSoftwareArchitectureDescriptionMethod">
<ri:page ri:content-title="Using PlantUML Stdlib C4 Lightweight Software Architecture Description Method" />
<ac:link-body>Using PlantUML Stdlib C4 Lightweight Software Architecture Description Method</ac:link-body>
</ac:link> for explanation of C4 and PlantUML Stdlib support for it.</p>
</ac:rich-text-body>
</ac:structured-macro>
<h2>C4 ACME Global Widget Production</h2>
<p>Your mission, if you choose to accept it, is to design the ACME Global Widget Production System.</p>
<ol style="list-style-type: decimal;">
<li>
<p>ACME has its own production sites, and uses 3rd party production sites.</p>
</li>
<li>
<p>All sites are connected to a central production host</p>
</li>
</ol>
<h3>C4 ACME Context</h3>
<h4>Source</h4>
<ac:structured-macro ac:name="info">
<ac:parameter ac:name="icon">false</ac:parameter>
<ac:rich-text-body>
<ac:image ac:align="center" ac:alt="@startuml
!include  &lt;C4/C4_Context.puml&gt;
!include &lt;office/Users/user.puml&gt;

LAYOUT_WITH_LEGEND()


title Top level Context diagram for ACME Global Widget Production


Person(AcmeProdOwner, Acme Production Owner , &quot;&lt;$user&gt; \n Responsible for Production of widgets in ACME Production Site&quot; )
Person(3rdProdOwner, 3rdParty Production Owner , &quot;&lt;$user&gt; \n Responsible for Production of widgets in 3rdParty Production Site&quot; )


System_Boundary(Remote, &quot;Remote&quot;) {

    System(ProdSystemHost, &quot;Production Host&quot;, &quot;Drives widget Production\n Analyses widget Production data to create reports&quot;)
    System(Analytics, &quot;Analytics&quot;, &quot;Provides data analysis and a dashboard view data - including relevant Production data&quot;)
    System(Monitoring, &quot;Monitoring&quot;, &quot;Monitors Production Host\nUses AWS Services&quot;)
    System_Ext(SupplyChain, &quot;SupplyChain&quot;, &quot;Provides parts to make the widgets&quot;)
    System_Ext(InventoryTracking, &quot;InventoryTracking&quot;, &quot;Customer Reference&quot;)
    

}



Enterprise_Boundary(AcmeProd, &quot;ACME Production Site&quot;) {

    System(AcmeWorkStation1, &quot;WorkStation1&quot;, &quot; Production setup for a group of widgets&quot;)    
    System(AcmeWorkStation2, &quot;WorkStation2&quot;, &quot; Production setup for a group of widgets&quot;)        
    System(AcmeWorkStationN, &quot;WorkStationN&quot;, &quot; Production setup for a group of widgets&quot;)        

}


Enterprise_Boundary(3rdProd, &quot;3rdParty Production Site&quot;) {


    System(3rdWorkStation1, &quot;WorkStation1&quot;, &quot; Production setup for a group of widgets&quot;)    
    System(3rdWorkStation2, &quot;WorkStation2&quot;, &quot; Production setup for a group of widgets&quot;)        
    System(3rdWorkStationN, &quot;WorkStationN&quot;, &quot; Production setup for a group of widgets&quot;)     
}


Rel_U(AcmeWorkStation1, ProdSystemHost, &quot;Sends Production report for widget&quot;)
Rel_U(AcmeWorkStation2, ProdSystemHost, &quot;Sends Production report for widget&quot;)
Rel_U(AcmeWorkStationN, ProdSystemHost, &quot;Sends Production report for widget&quot;)


Rel_U(3rdWorkStation1, ProdSystemHost, &quot;Sends Production report for widget&quot;)
Rel_U(3rdWorkStation2, ProdSystemHost, &quot;Sends Production report for widget&quot;)
Rel_U(3rdWorkStationN, ProdSystemHost, &quot;Sends Production report for widget&quot;)





Rel_D(AcmeProdOwner, ProdSystemHost, &quot;Reviews Acme and 3rdParty site Production reports&quot;)
Rel_D(3rdProdOwner, ProdSystemHost, &quot;Reviews 3rdParty site Production reports&quot;)


Rel_D(Analytics, ProdSystemHost, &quot;Data Analysis&quot;)
Rel_D(SupplyChain, ProdSystemHost, &quot;Parts&quot;)
Rel_D(InventoryTracking, ProdSystemHost, &quot;Tracking&quot;)
Rel_D(Monitoring, ProdSystemHost, &quot;Monitoring&quot;)

footer %filename() rendered with PlantUML version %version()\nThe Hitchhiker’s Guide to PlantUML

@enduml">
<ri:attachment ri:filename="extern_plantuml-0030585265dac83354a1b981491a78e92165b207.png"></ri:attachment>
</ac:image><p style="text-align: center;"><em>C4 ACME Context</em></p>
</ac:rich-text-body>
</ac:structured-macro>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">true</ac:parameter>
<ac:plain-text-body><![CDATA[@startuml
!include  <C4/C4_Context.puml>
!include <office/Users/user.puml>

LAYOUT_WITH_LEGEND()


title Top level Context diagram for ACME Global Widget Production


Person(AcmeProdOwner, Acme Production Owner , "<$user> \n Responsible for Production of widgets in ACME Production Site" )
Person(3rdProdOwner, 3rdParty Production Owner , "<$user> \n Responsible for Production of widgets in 3rdParty Production Site" )


System_Boundary(Remote, "Remote") {

    System(ProdSystemHost, "Production Host", "Drives widget Production\n Analyses widget Production data to create reports")
    System(Analytics, "Analytics", "Provides data analysis and a dashboard view data - including relevant Production data")
    System(Monitoring, "Monitoring", "Monitors Production Host\nUses AWS Services")
    System_Ext(SupplyChain, "SupplyChain", "Provides parts to make the widgets")
    System_Ext(InventoryTracking, "InventoryTracking", "Customer Reference")
    

}



Enterprise_Boundary(AcmeProd, "ACME Production Site") {

    System(AcmeWorkStation1, "WorkStation1", " Production setup for a group of widgets")    
    System(AcmeWorkStation2, "WorkStation2", " Production setup for a group of widgets")        
    System(AcmeWorkStationN, "WorkStationN", " Production setup for a group of widgets")        

}


Enterprise_Boundary(3rdProd, "3rdParty Production Site") {


    System(3rdWorkStation1, "WorkStation1", " Production setup for a group of widgets")    
    System(3rdWorkStation2, "WorkStation2", " Production setup for a group of widgets")        
    System(3rdWorkStationN, "WorkStationN", " Production setup for a group of widgets")     
}


Rel_U(AcmeWorkStation1, ProdSystemHost, "Sends Production report for widget")
Rel_U(AcmeWorkStation2, ProdSystemHost, "Sends Production report for widget")
Rel_U(AcmeWorkStationN, ProdSystemHost, "Sends Production report for widget")


Rel_U(3rdWorkStation1, ProdSystemHost, "Sends Production report for widget")
Rel_U(3rdWorkStation2, ProdSystemHost, "Sends Production report for widget")
Rel_U(3rdWorkStationN, ProdSystemHost, "Sends Production report for widget")





Rel_D(AcmeProdOwner, ProdSystemHost, "Reviews Acme and 3rdParty site Production reports")
Rel_D(3rdProdOwner, ProdSystemHost, "Reviews 3rdParty site Production reports")


Rel_D(Analytics, ProdSystemHost, "Data Analysis")
Rel_D(SupplyChain, ProdSystemHost, "Parts")
Rel_D(InventoryTracking, ProdSystemHost, "Tracking")
Rel_D(Monitoring, ProdSystemHost, "Monitoring")

footer %filename() rendered with PlantUML version %version()\nThe Hitchhiker’s Guide to PlantUML

@enduml]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Play</h4>
<p><a href="http://www.plantuml.com/plantuml/uml/SoWkIImgAStDuNBAJrBGjLDmpCbCJbMmKiX8pSd9vt98pKi1IW80"><ac:image ac:alt="playbuttonc4acme1" ac:width="40px">
<ri:attachment ri:filename="play.png"><ri:page ri:content-title="Welcome to The Hitchhiker’s Guide to PlantUML!" />
</ri:attachment>
</ac:image></a> Press to play around with this diagram source online.</p>
<h4>Explore</h4>
<ol style="list-style-type: decimal;">
<li>
<p>TODO</p>
</li>
</ol>
<h3>C4 ACME Container</h3>
<ac:structured-macro ac:name="info">
<ac:parameter ac:name="icon">false</ac:parameter>
<ac:rich-text-body>
<ac:image ac:align="center" ac:alt="@startuml
!include  &lt;C4/C4_Context.puml&gt;
!include  &lt;C4/C4_Container.puml&gt;
!include &lt;office/Users/user.puml&gt;

LAYOUT_WITH_LEGEND()
skinparam handwritten false


title Container Diagram for ACME Widget Workstation 



System_Boundary(WorkStation, &quot;Workstation&quot;) {
    Person(VfiOperator, Operator , &quot;&lt;$user&gt; \n On-site Operator who produces Widget&quot; )

    System(WorkStationPC, &quot;WorkStation PC&quot;, &quot;Drives the Production process. \nProvides feedback to operator. \nConnects to central Production system&quot;)    

    System(Hub, &quot;Hub&quot;, &quot;Connects Multiple Widgets&quot;)    

    System(Unit1, &quot;Unit1&quot;, &quot;Widget 1&quot;)    
    System(Unit2, &quot;Unit2&quot;, &quot;Widget 2&quot;)    
    System(UnitN, &quot;UnitN&quot;, &quot;Widget N&quot;)    
}

Rel_R(VfiOperator, WorkStationPC, &quot;Checks Production status&quot;)
Rel_D(WorkStationPC, Hub, &quot;Drive Production and Info Retrieval&quot;)
Rel(Hub, Unit1, &quot;Connect&quot;)
Rel(Hub, Unit2, &quot;Connect&quot;)
Rel(Hub, UnitN, &quot;Connect&quot;)

footer %filename() rendered with PlantUML version %version()\nThe Hitchhiker’s Guide to PlantUML
@enduml">
<ri:attachment ri:filename="extern_plantuml-55cd9a67b21b7c6988b1f0092a6821be907fc5e6.png"></ri:attachment>
</ac:image><p style="text-align: center;"><em>C4 ACME Workstation</em></p>
</ac:rich-text-body>
</ac:structured-macro>
<h4>Source</h4>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">true</ac:parameter>
<ac:plain-text-body><![CDATA[@startuml
!include  <C4/C4_Context.puml>
!include  <C4/C4_Container.puml>
!include <office/Users/user.puml>

LAYOUT_WITH_LEGEND()
skinparam handwritten false


title Container Diagram for ACME Widget Workstation 



System_Boundary(WorkStation, "Workstation") {
    Person(VfiOperator, Operator , "<$user> \n On-site Operator who produces Widget" )

    System(WorkStationPC, "WorkStation PC", "Drives the Production process. \nProvides feedback to operator. \nConnects to central Production system")    

    System(Hub, "Hub", "Connects Multiple Widgets")    

    System(Unit1, "Unit1", "Widget 1")    
    System(Unit2, "Unit2", "Widget 2")    
    System(UnitN, "UnitN", "Widget N")    
}

Rel_R(VfiOperator, WorkStationPC, "Checks Production status")
Rel_D(WorkStationPC, Hub, "Drive Production and Info Retrieval")
Rel(Hub, Unit1, "Connect")
Rel(Hub, Unit2, "Connect")
Rel(Hub, UnitN, "Connect")

footer %filename() rendered with PlantUML version %version()\nThe Hitchhiker’s Guide to PlantUML
@enduml]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Play</h4>
<p><a href="http://www.plantuml.com/plantuml/uml/SoWkIImgAStDuNBAJrBGjLDmpCbCJbMmKiX8pSd9vt98pKi1IW80"><ac:image ac:alt="playbuttonc4acme2" ac:width="40px">
<ri:attachment ri:filename="play.png"><ri:page ri:content-title="Welcome to The Hitchhiker’s Guide to PlantUML!" />
</ri:attachment>
</ac:image></a> Press to play around with this diagram source online.</p>
<h4>Explore</h4>
<ol style="list-style-type: decimal;">
<li>
<p>TODO</p>
</li>
</ol>
<h3>C4 ACME Component</h3>
<ac:structured-macro ac:name="info">
<ac:parameter ac:name="icon">false</ac:parameter>
<ac:rich-text-body>
<p style="text-align: center;"><em>C4 ACME Component</em></p>
</ac:rich-text-body>
</ac:structured-macro>
<ac:structured-macro ac:name="info">
<ac:parameter ac:name="icon">false</ac:parameter>
<ac:rich-text-body>
<ac:image ac:align="center" ac:alt=" 
!includeurl &lt;aws/common&gt;
!includeurl &lt;aws/SDKs/Java/Java.puml&gt;
!includeurl &lt;aws/SDKs/Nodejs/Nodejs.puml&gt;

!includeurl &lt;aws/General/users/users.puml&gt;
!includeurl &lt;aws/General/client/client.puml&gt;
!includeurl &lt;aws/General/AWScloud/AWScloud.puml&gt;
!includeurl &lt;aws/General/mobileclient/mobileclient.puml&gt;

!includeurl &lt;aws/Database/AmazonRDS/AmazonRDS.puml&gt;
!includeurl &lt;aws/Database/AmazonRDS/DBinstance/DBinstance.puml&gt;
!includeurl &lt;aws/Database/AmazonRDS/MySQLDBinstance/MySQLDBinstance.puml&gt;

!includeurl &lt;aws/Compute/AWSElasticBeanstalk/AWSElasticBeanstalk.puml&gt;
!includeurl &lt;aws/Compute/AWSElasticBeanstalk/deployment/deployment.puml&gt;
!includeurl &lt;aws/Compute/AWSElasticBeanstalk/application/application.puml&gt;
!includeurl &lt;aws/Compute/ElasticLoadBalancing/ApplicationLoadBalancer/ApplicationLoadBalancer.puml&gt;
!includeurl &lt;aws/Compute/AWSLambda/AWSLambda.puml&gt;
!includeurl &lt;aws/Compute/AWSLambda/LambdaFunction/LambdaFunction.puml&gt;

!includeurl &lt;aws/Storage/AmazonS3/AmazonS3.puml&gt;
!includeurl &lt;aws/Storage/AmazonS3/bucket/bucket.puml&gt;
!includeurl &lt;aws/Storage/AmazonGlacier/AmazonGlacier.puml&gt;
!includeurl &lt;aws/Storage/AmazonGlacier/archive/archive.puml&gt;

!includeurl &lt;aws/SecurityIdentityCompliance/AWSIAM/AWSIAM.puml&gt;
!includeurl &lt;aws/SecurityIdentityCompliance/IAM/permissions/permissions.puml&gt;
!includeurl &lt;aws/SecurityIdentityCompliance/IAM/role/role.puml&gt;

!includeurl &lt;aws/MobileServices/AmazonCognito/AmazonCognito.puml&gt;
!includeurl &lt;aws/NetworkingContentDelivery/AmazonRoute53/AmazonRoute53.puml&gt;
!includeurl &lt;aws/SecurityIdentityCompliance/AWSIAM/AWSIAM.puml&gt;

!includeurl &lt;aws/Analytics/AmazonES/AmazonES.puml&gt;
!includeurl &lt;aws/ManagementTools/AmazonCloudWatch/AmazonCloudWatch.puml&gt;
!includeurl &lt;aws/ManagementTools/AWSCloudTrail/AWSCloudTrail.puml&gt;

!includeurl &lt;aws/Messaging/AmazonSNS/AmazonSNS.puml&gt;

skinparam componentArrowColor Black
skinparam componentBackgroundColor White
skinparam nodeBackgroundColor White
skinparam agentBackgroundColor White
skinparam artifactBackgroundColor White





AWSCLOUD(awscloud){
 
    
    APPLICATIONLOADBALANCER(loadbalancer, &quot;ALB Logs&quot;)
    AMAZONS3(S3, &quot;S3 access Logs&quot;)
    AWSLAMBDA(Lambda, &quot;Lambda logs\nand metrics&quot;)
    AWSCLOUDTRAIL(AWSCloudTrail, &quot;API logs&quot;)
    
    AMAZONCLOUDWATCH(AmazonCloudWatch)
    AMAZONSNS(AmazonSNS, &quot;Send Notifications\n to Owner/Admin&quot;)


    loadbalancer --&gt; AmazonCloudWatch
    S3 --&gt; AmazonCloudWatch
    Lambda --&gt; AmazonCloudWatch
    AWSCloudTrail --&gt; AmazonCloudWatch
    
    AmazonCloudWatch --&gt; AmazonSNS
 
}
footer %filename() rendered with PlantUML version %version()\nThe Hitchhiker’s Guide to PlantUML
@enduml">
<ri:attachment ri:filename="extern_plantuml-fa24f659994e42722a8d0a29448395f513b603d8.png"></ri:attachment>
</ac:image><p style="text-align: center;"><em>C4 ACME Component Monitoring</em></p>
</ac:rich-text-body>
</ac:structured-macro>
<h4>Source</h4>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">true</ac:parameter>
<ac:plain-text-body><![CDATA[@startuml

'AWS stuff here
'================================
!includeurl <aws/common>
!includeurl <aws/SDKs/Java/Java.puml>
!includeurl <aws/SDKs/Nodejs/Nodejs.puml>

!includeurl <aws/General/users/users.puml>
!includeurl <aws/General/client/client.puml>
!includeurl <aws/General/AWScloud/AWScloud.puml>
!includeurl <aws/General/mobileclient/mobileclient.puml>

!includeurl <aws/Database/AmazonRDS/AmazonRDS.puml>
!includeurl <aws/Database/AmazonRDS/DBinstance/DBinstance.puml>
!includeurl <aws/Database/AmazonRDS/MySQLDBinstance/MySQLDBinstance.puml>

!includeurl <aws/Compute/AWSElasticBeanstalk/AWSElasticBeanstalk.puml>
!includeurl <aws/Compute/AWSElasticBeanstalk/deployment/deployment.puml>
!includeurl <aws/Compute/AWSElasticBeanstalk/application/application.puml>
!includeurl <aws/Compute/ElasticLoadBalancing/ApplicationLoadBalancer/ApplicationLoadBalancer.puml>
!includeurl <aws/Compute/AWSLambda/AWSLambda.puml>
!includeurl <aws/Compute/AWSLambda/LambdaFunction/LambdaFunction.puml>

!includeurl <aws/Storage/AmazonS3/AmazonS3.puml>
!includeurl <aws/Storage/AmazonS3/bucket/bucket.puml>
!includeurl <aws/Storage/AmazonGlacier/AmazonGlacier.puml>
!includeurl <aws/Storage/AmazonGlacier/archive/archive.puml>

!includeurl <aws/SecurityIdentityCompliance/AWSIAM/AWSIAM.puml>
!includeurl <aws/SecurityIdentityCompliance/IAM/permissions/permissions.puml>
!includeurl <aws/SecurityIdentityCompliance/IAM/role/role.puml>

!includeurl <aws/MobileServices/AmazonCognito/AmazonCognito.puml>
!includeurl <aws/NetworkingContentDelivery/AmazonRoute53/AmazonRoute53.puml>
!includeurl <aws/SecurityIdentityCompliance/AWSIAM/AWSIAM.puml>

!includeurl <aws/Analytics/AmazonES/AmazonES.puml>
!includeurl <aws/ManagementTools/AmazonCloudWatch/AmazonCloudWatch.puml>

'Elastic stuff here
'================================
!define ELASTIC_PUML ./plantuml-elastic

!include ELASTIC_PUML/apm/apm.puml
!include ELASTIC_PUML/app_search/app_search.puml
!include ELASTIC_PUML/beats/beats.puml
!include ELASTIC_PUML/cloud/cloud.puml
!include ELASTIC_PUML/cloud_in_kubernetes/cloud_in_kubernetes.puml
!include ELASTIC_PUML/code_search/code_search.puml
!include ELASTIC_PUML/ece/ece.puml
!include ELASTIC_PUML/eck/eck.puml
!include ELASTIC_PUML/elastic_search/elastic_search.puml
!include ELASTIC_PUML/endpoint/endpoint.puml
!include ELASTIC_PUML/enterprise_search/enterprise_search.puml
!include ELASTIC_PUML/kibana/kibana.puml
!include ELASTIC_PUML/logging/logging.puml
!include ELASTIC_PUML/logstash/logstash.puml
!include ELASTIC_PUML/maps/maps.puml
!include ELASTIC_PUML/metrics/metrics.puml
!include ELASTIC_PUML/siem/siem.puml
!include ELASTIC_PUML/site_search/site_search.puml
!include ELASTIC_PUML/stack/stack.puml
!include ELASTIC_PUML/uptime/uptime.puml


'change color of selected background shape https://plantuml.com/deployment-diagram
skinparam actorBackgroundColor White 
skinparam agentBackgroundColor White 
skinparam artifactBackgroundColor White 
skinparam boundaryBackgroundColor White 
skinparam cardBackgroundColor White 
skinparam cloudBackgroundColor White 
skinparam componentBackgroundColor White 
skinparam controlBackgroundColor White 
skinparam databaseBackgroundColor White 
skinparam entityBackgroundColor White 
skinparam fileBackgroundColor White 
skinparam folderBackgroundColor White 
skinparam frameBackgroundColor White 
skinparam interfaceBackgroundColor White 
skinparam nodeBackgroundColor White 
skinparam packageBackgroundColor White 
skinparam queueBackgroundColor White 
skinparam stackBackgroundColor White 
skinparam rectangleBackgroundColor White 
skinparam storageBackgroundColor White 
skinparam usecaseBackgroundColor White 



'To change background color to elastic green
'skinparam componentBackgroundColor 00BFB3 

AWSCLOUD(aws) {

    AMAZONS3(s3_bucket,"Logs uploaded to here")

package Elastic {

    'add "node", "component", "agent" etc... to change background shape per https://plantuml.com/deployment-diagram
    'default is agent 
    ELASTIC_SEARCH(ElasticSearch, "Search and Analyze",database)
    LOGSTASH(Logstash, "Parse and Transform",node)
    KIBANA(Kibana, "Visualize",agent) 
}

    s3_bucket -down-> Logstash: Raw logs
    Logstash -right-> ElasticSearch: Transformed Data
    ElasticSearch -right-> Kibana: Data to View

}
footer %filename() rendered with PlantUML version %version()\nThe Hitchhiker’s Guide to PlantUML
@enduml]]></ac:plain-text-body>
</ac:structured-macro>
<ac:structured-macro ac:name="code">
<ac:parameter ac:name="language">python</ac:parameter>
<ac:parameter ac:name="linenumbers">true</ac:parameter>
<ac:plain-text-body><![CDATA[ 
!includeurl <aws/common>
!includeurl <aws/SDKs/Java/Java.puml>
!includeurl <aws/SDKs/Nodejs/Nodejs.puml>

!includeurl <aws/General/users/users.puml>
!includeurl <aws/General/client/client.puml>
!includeurl <aws/General/AWScloud/AWScloud.puml>
!includeurl <aws/General/mobileclient/mobileclient.puml>

!includeurl <aws/Database/AmazonRDS/AmazonRDS.puml>
!includeurl <aws/Database/AmazonRDS/DBinstance/DBinstance.puml>
!includeurl <aws/Database/AmazonRDS/MySQLDBinstance/MySQLDBinstance.puml>

!includeurl <aws/Compute/AWSElasticBeanstalk/AWSElasticBeanstalk.puml>
!includeurl <aws/Compute/AWSElasticBeanstalk/deployment/deployment.puml>
!includeurl <aws/Compute/AWSElasticBeanstalk/application/application.puml>
!includeurl <aws/Compute/ElasticLoadBalancing/ApplicationLoadBalancer/ApplicationLoadBalancer.puml>
!includeurl <aws/Compute/AWSLambda/AWSLambda.puml>
!includeurl <aws/Compute/AWSLambda/LambdaFunction/LambdaFunction.puml>

!includeurl <aws/Storage/AmazonS3/AmazonS3.puml>
!includeurl <aws/Storage/AmazonS3/bucket/bucket.puml>
!includeurl <aws/Storage/AmazonGlacier/AmazonGlacier.puml>
!includeurl <aws/Storage/AmazonGlacier/archive/archive.puml>

!includeurl <aws/SecurityIdentityCompliance/AWSIAM/AWSIAM.puml>
!includeurl <aws/SecurityIdentityCompliance/IAM/permissions/permissions.puml>
!includeurl <aws/SecurityIdentityCompliance/IAM/role/role.puml>

!includeurl <aws/MobileServices/AmazonCognito/AmazonCognito.puml>
!includeurl <aws/NetworkingContentDelivery/AmazonRoute53/AmazonRoute53.puml>
!includeurl <aws/SecurityIdentityCompliance/AWSIAM/AWSIAM.puml>

!includeurl <aws/Analytics/AmazonES/AmazonES.puml>
!includeurl <aws/ManagementTools/AmazonCloudWatch/AmazonCloudWatch.puml>
!includeurl <aws/ManagementTools/AWSCloudTrail/AWSCloudTrail.puml>

!includeurl <aws/Messaging/AmazonSNS/AmazonSNS.puml>

skinparam componentArrowColor Black
skinparam componentBackgroundColor White
skinparam nodeBackgroundColor White
skinparam agentBackgroundColor White
skinparam artifactBackgroundColor White





AWSCLOUD(awscloud){
 
    
    APPLICATIONLOADBALANCER(loadbalancer, "ALB Logs")
    AMAZONS3(S3, "S3 access Logs")
    AWSLAMBDA(Lambda, "Lambda logs\nand metrics")
    AWSCLOUDTRAIL(AWSCloudTrail, "API logs")
    
    AMAZONCLOUDWATCH(AmazonCloudWatch)
    AMAZONSNS(AmazonSNS, "Send Notifications\n to Owner/Admin")


    loadbalancer --> AmazonCloudWatch
    S3 --> AmazonCloudWatch
    Lambda --> AmazonCloudWatch
    AWSCloudTrail --> AmazonCloudWatch
    
    AmazonCloudWatch --> AmazonSNS
 
}
footer %filename() rendered with PlantUML version %version()\nThe Hitchhiker’s Guide to PlantUML
@enduml]]></ac:plain-text-body>
</ac:structured-macro>
<h4>Play</h4>
<p><a href="http://www.plantuml.com/plantuml/uml/SoWkIImgAStDuNBAJrBGjLDmpCbCJbMmKiX8pSd9vt98pKi1IW80"><ac:image ac:alt="playbuttonc4acme3" ac:width="40px">
<ri:attachment ri:filename="play.png"><ri:page ri:content-title="Welcome to The Hitchhiker’s Guide to PlantUML!" />
</ri:attachment>
</ac:image></a> Press to play around with this diagram source online.</p>
<h4>Explore</h4>
<ol style="list-style-type: decimal;">
<li>
<p>TODO</p>
</li>
</ol>
